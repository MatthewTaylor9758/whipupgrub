{"version":3,"sources":["tools/Navbar.js","pages/SplashPage.js","pages/LoginPage.js","pages/SignUpPage.js","pages/ProfilePage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","AppBar","id","Toolbar","Grid","container","xs","item","to","SplashPage","makeRequest","a","fetch","makeOtherRequest","method","headers","res","json","res2","console","log","onClick","LoginPage","SignUpPage","ProfilePage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TA8BeA,MAtBf,WACE,OACE,mCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,SAAX,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAApB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACD,GAAI,EAAGJ,GAAG,cAArB,mCAGA,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACD,GAAI,EAAf,SACE,cAAC,IAAD,CAASE,GAAI,IAAKN,GAAG,cAArB,4BAEF,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACD,GAAI,EAAGJ,GAAG,eAArB,8CCaGO,MA7Bf,WAEE,IAAMC,EAAW,uCAAG,sBAAAC,EAAA,sEACFC,MAAM,cADJ,yDAAH,qDAIXC,EAAgB,uCAAG,8BAAAF,EAAA,sEACPC,MAAM,mGAAoG,CACxHE,OAAQ,MAERC,QAAS,CACP,eAAgB,sBALG,cACnBC,EADmB,gBAQNA,EAAIC,OARE,OAQnBC,EARmB,OASvBC,QAAQC,IAAIF,GATW,2CAAH,qDAYtB,OACE,qCACE,cAAC,EAAD,IACA,0DAGA,wBAAQG,QAASX,EAAjB,mCACA,wBAAQW,QAASR,EAAjB,0CClBSS,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCKSC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCKSC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCgCSC,MA7Bf,WAiBE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWN,IACtC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,UAAUC,UAAWL,IACvC,cAAC,IAAD,CAAOI,KAAK,gBAAgBC,UAAWJ,IACvC,cAAC,IAAD,CAAOG,KAAK,IAAIC,UAAWnB,UCpBpBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bc0b74c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { makeStyles, Card, Button, Typography, AppBar, Toolbar, Grid, Modal } from '@material-ui/core';\nimport '../CSS/NavBar.css';\n\n// this is just a test\n\nfunction NavBar() {\n  return (\n    <>\n      <AppBar id='navbar'>\n        <Toolbar>\n          <Grid container xs={12}>\n            <Grid item xs={4} id='navbar_left'>\n              This is the left side\n            </Grid>\n            <Grid item xs={4}>\n              <NavLink to={'/'} id='navbar_logo'>FridgeFinder</NavLink>\n            </Grid>\n            <Grid item xs={4} id='navbar_right'>\n              This is the right side\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport NavBar from '../tools/Navbar';\n\nfunction SplashPage () {\n\n  const makeRequest = async () => {\n    let res = await fetch('/api/tests')\n  }\n\n  const makeOtherRequest = async () => {\n    let res = await fetch('https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=3', {\n      method: 'get',\n      // mode: '*cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n    let res2 = await res.json();\n    console.log(res2);\n  }\n\n  return (\n    <>\n      <NavBar />\n      <h1>\n        This is the splash page.\n      </h1>\n      <button onClick={makeRequest}>Make My-Proxy Request</button>\n      <button onClick={makeOtherRequest}>Make Other-Proxy Request</button>\n    </>\n  )\n}\nexport default SplashPage;\n","import React from 'react';\nimport NavBar from '../tools/Navbar';\n\nfunction LoginPage() {\n  return (\n    <>\n      <NavBar />\n    </>\n  )\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport NavBar from '../tools/Navbar'\n\nfunction SignUpPage() {\n  return (\n    <>\n      <NavBar />\n    </>\n  )\n}\n\nexport default SignUpPage;\n","import React from 'react';\nimport NavBar from '../tools/Navbar';\n\nfunction ProfilePage() {\n  return (\n    <>\n      <NavBar />\n    </>\n  )\n}\n\nexport default ProfilePage;\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport SplashPage from './pages/SplashPage';\nimport LoginPage from './pages/LoginPage';\nimport SignUpPage from './pages/SignUpPage';\nimport ProfilePage from './pages/ProfilePage';\n\nfunction App() {\n  /*\n  Will be making my own proxy in Flask when I get there, but for now I am using the\n  one I have listed on the line 10(cors-anywhere.herokuapp.com)\n  */\n  // const makeRequest = async () => {\n  //   let res = await fetch('https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=3', {\n  //     method: 'get',\n  //     // mode: '*cors',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //   })\n  //   let response = await res.json();\n  //   console.log(response);\n  // }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/login' component={LoginPage}></Route>\n        <Route exact path='/signup' component={SignUpPage}></Route>\n        <Route path='/myfridge/:id' component={ProfilePage}></Route>\n        <Route path='/' component={SplashPage}></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}